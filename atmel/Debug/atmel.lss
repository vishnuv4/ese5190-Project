
atmel.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000438  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000c8  00000000  00000000  000000d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800100  00800100  00000438  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  00000438  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 0000000e  00000000  00000000  00000467  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00000475  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001672  00000000  00000000  00000555  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009ba  00000000  00000000  00001bc7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000062d  00000000  00000000  00002581  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c0  00000000  00000000  00002bb0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000234  00000000  00000000  00002d70  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000047b  00000000  00000000  00002fa4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  0000341f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  0000034c  0000034c  00000420  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000034d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .progmemx.data.char_lookup 0000005f  000000c8  000000c8  0000019c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 16 .text.__vector_18 0000004a  000001d4  000001d4  000002a8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.__vector_10 0000005c  00000128  00000128  000001fc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.init    0000002a  0000024a  0000024a  0000031e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.main    0000001c  000002e0  000002e0  000003b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.uint16ToArray 00000008  00000344  00000344  00000418  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.calculateCheckSum 0000002c  0000021e  0000021e  000002f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.sendPacket 00000050  00000184  00000184  00000258  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.speaker_reset 0000000c  00000320  00000320  000003f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.speaker_setVolume 0000000c  0000032c  0000032c  00000400  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.speaker_setEQ 0000000c  00000338  00000338  0000040c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.speaker_outputDevice 0000001e  000002c2  000002c2  00000396  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.speaker_begin 00000026  0000029c  0000029c  00000370  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .data._packet 0000000a  0080010b  0000035a  0000042e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 29 .text.UART_init 00000028  00000274  00000274  00000348  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.UART_send 0000000e  00000312  00000312  000003e6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.__dummy_fini 00000002  00000354  00000354  00000428  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.__dummy_funcs_on_exit 00000002  00000356  00000356  0000042a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.__dummy_simulator_exit 00000002  00000358  00000358  0000042c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.exit    00000016  000002fc  000002fc  000003d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text._Exit   00000004  00000350  00000350  00000424  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
   4:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>
   8:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>
   c:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>
  10:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>
  14:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>
  18:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>
  1c:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>
  20:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>
  24:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>
  28:	0c 94 94 00 	jmp	0x128	; 0x128 <__vector_10>
  2c:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>
  30:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>
  34:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>
  38:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>
  3c:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>
  40:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>
  44:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>
  48:	0c 94 ea 00 	jmp	0x1d4	; 0x1d4 <__vector_18>
  4c:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>
  50:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>
  54:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>
  58:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>
  5c:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>
  60:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>
  64:	0c 94 a6 01 	jmp	0x34c	; 0x34c <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 0b       	sbc	r16, r17
  6c:	80 01       	movw	r16, r0
  6e:	0b 01       	movw	r0, r22
  70:	15 00       	.word	0x0015	; ????
  72:	03 5a       	subi	r16, 0xA3	; 163

00000074 <__ctors_end>:
  74:	11 24       	eor	r1, r1
  76:	1f be       	out	0x3f, r1	; 63
  78:	cf ef       	ldi	r28, 0xFF	; 255
  7a:	d8 e0       	ldi	r29, 0x08	; 8
  7c:	de bf       	out	0x3e, r29	; 62
  7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
  80:	e8 e6       	ldi	r30, 0x68	; 104
  82:	f0 e0       	ldi	r31, 0x00	; 0
  84:	40 e0       	ldi	r20, 0x00	; 0
  86:	17 c0       	rjmp	.+46     	; 0xb6 <__do_clear_bss+0x8>
  88:	b5 91       	lpm	r27, Z+
  8a:	a5 91       	lpm	r26, Z+
  8c:	35 91       	lpm	r19, Z+
  8e:	25 91       	lpm	r18, Z+
  90:	05 91       	lpm	r16, Z+
  92:	07 fd       	sbrc	r16, 7
  94:	0c c0       	rjmp	.+24     	; 0xae <__do_clear_bss>
  96:	95 91       	lpm	r25, Z+
  98:	85 91       	lpm	r24, Z+
  9a:	ef 01       	movw	r28, r30
  9c:	f9 2f       	mov	r31, r25
  9e:	e8 2f       	mov	r30, r24
  a0:	05 90       	lpm	r0, Z+
  a2:	0d 92       	st	X+, r0
  a4:	a2 17       	cp	r26, r18
  a6:	b3 07       	cpc	r27, r19
  a8:	d9 f7       	brne	.-10     	; 0xa0 <__do_copy_data+0x20>
  aa:	fe 01       	movw	r30, r28
  ac:	04 c0       	rjmp	.+8      	; 0xb6 <__do_clear_bss+0x8>

000000ae <__do_clear_bss>:
  ae:	1d 92       	st	X+, r1
  b0:	a2 17       	cp	r26, r18
  b2:	b3 07       	cpc	r27, r19
  b4:	e1 f7       	brne	.-8      	; 0xae <__do_clear_bss>
  b6:	e4 37       	cpi	r30, 0x74	; 116
  b8:	f4 07       	cpc	r31, r20
  ba:	31 f7       	brne	.-52     	; 0x88 <__do_copy_data+0x8>
  bc:	0e 94 70 01 	call	0x2e0	; 0x2e0 <main>
  c0:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <exit>

000000c4 <_exit>:
  c4:	f8 94       	cli

000000c6 <__stop_program>:
  c6:	ff cf       	rjmp	.-2      	; 0xc6 <__stop_program>

Disassembly of section .text:

0000034c <__bad_interrupt>:
 34c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.__vector_18:

000001d4 <__vector_18>:
#define txPin 11

char rcv;

ISR(USART_RX_vect)
{
 1d4:	1f 92       	push	r1
 1d6:	0f 92       	push	r0
 1d8:	0f b6       	in	r0, 0x3f	; 63
 1da:	0f 92       	push	r0
 1dc:	11 24       	eor	r1, r1
 1de:	8f 93       	push	r24
 1e0:	9f 93       	push	r25
 1e2:	af 93       	push	r26
 1e4:	ef 93       	push	r30
 1e6:	ff 93       	push	r31
	rcv = UDR0;
 1e8:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 1ec:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <rcv>
	PORTD = char_lookup[rcv-' '];
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	80 97       	sbiw	r24, 0x20	; 32
 1f4:	09 2e       	mov	r0, r25
 1f6:	00 0c       	add	r0, r0
 1f8:	aa 0b       	sbc	r26, r26
 1fa:	88 53       	subi	r24, 0x38	; 56
 1fc:	9f 4f       	sbci	r25, 0xFF	; 255
 1fe:	af 4f       	sbci	r26, 0xFF	; 255
 200:	fc 01       	movw	r30, r24
 202:	84 91       	lpm	r24, Z
 204:	a7 fd       	sbrc	r26, 7
 206:	80 81       	ld	r24, Z
 208:	8b b9       	out	0x0b, r24	; 11
}
 20a:	ff 91       	pop	r31
 20c:	ef 91       	pop	r30
 20e:	af 91       	pop	r26
 210:	9f 91       	pop	r25
 212:	8f 91       	pop	r24
 214:	0f 90       	pop	r0
 216:	0f be       	out	0x3f, r0	; 63
 218:	0f 90       	pop	r0
 21a:	1f 90       	pop	r1
 21c:	18 95       	reti

Disassembly of section .text.__vector_10:

00000128 <__vector_10>:

ISR(TIMER1_CAPT_vect)
{
 128:	1f 92       	push	r1
 12a:	0f 92       	push	r0
 12c:	0f b6       	in	r0, 0x3f	; 63
 12e:	0f 92       	push	r0
 130:	11 24       	eor	r1, r1
 132:	2f 93       	push	r18
 134:	3f 93       	push	r19
 136:	4f 93       	push	r20
 138:	5f 93       	push	r21
 13a:	6f 93       	push	r22
 13c:	7f 93       	push	r23
 13e:	8f 93       	push	r24
 140:	9f 93       	push	r25
 142:	af 93       	push	r26
 144:	bf 93       	push	r27
 146:	ef 93       	push	r30
 148:	ff 93       	push	r31
	UART_send('n');
 14a:	8e e6       	ldi	r24, 0x6E	; 110
 14c:	0e 94 89 01 	call	0x312	; 0x312 <UART_send>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 150:	2f ef       	ldi	r18, 0xFF	; 255
 152:	80 e7       	ldi	r24, 0x70	; 112
 154:	92 e0       	ldi	r25, 0x02	; 2
 156:	21 50       	subi	r18, 0x01	; 1
 158:	80 40       	sbci	r24, 0x00	; 0
 15a:	90 40       	sbci	r25, 0x00	; 0
 15c:	e1 f7       	brne	.-8      	; 0x156 <__vector_10+0x2e>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <__vector_10+0x38>
 160:	00 00       	nop
	_delay_ms(50);
}
 162:	ff 91       	pop	r31
 164:	ef 91       	pop	r30
 166:	bf 91       	pop	r27
 168:	af 91       	pop	r26
 16a:	9f 91       	pop	r25
 16c:	8f 91       	pop	r24
 16e:	7f 91       	pop	r23
 170:	6f 91       	pop	r22
 172:	5f 91       	pop	r21
 174:	4f 91       	pop	r20
 176:	3f 91       	pop	r19
 178:	2f 91       	pop	r18
 17a:	0f 90       	pop	r0
 17c:	0f be       	out	0x3f, r0	; 63
 17e:	0f 90       	pop	r0
 180:	1f 90       	pop	r1
 182:	18 95       	reti

Disassembly of section .text.init:

0000024a <init>:

void init()
{
	cli();
 24a:	f8 94       	cli
	UART_init();
 24c:	0e 94 3a 01 	call	0x274	; 0x274 <UART_init>
	DDRB |= (1<<PORTB5);
 250:	84 b1       	in	r24, 0x04	; 4
 252:	80 62       	ori	r24, 0x20	; 32
 254:	84 b9       	out	0x04, r24	; 4
	DDRB |= (1<<PORTD2) | (1<<PORTD3) | (1<<PORTD4) | (1<<PORTD5) | (1<<PORTD6) | (1<<PORTD7);
 256:	84 b1       	in	r24, 0x04	; 4
 258:	8c 6f       	ori	r24, 0xFC	; 252
 25a:	84 b9       	out	0x04, r24	; 4
	TCCR1B |= (1<<ICES1) | (1<<ICNC1);
 25c:	e1 e8       	ldi	r30, 0x81	; 129
 25e:	f0 e0       	ldi	r31, 0x00	; 0
 260:	80 81       	ld	r24, Z
 262:	80 6c       	ori	r24, 0xC0	; 192
 264:	80 83       	st	Z, r24
	TIMSK1 |= (1<<ICIE1);
 266:	ef e6       	ldi	r30, 0x6F	; 111
 268:	f0 e0       	ldi	r31, 0x00	; 0
 26a:	80 81       	ld	r24, Z
 26c:	80 62       	ori	r24, 0x20	; 32
 26e:	80 83       	st	Z, r24
	sei();	
 270:	78 94       	sei
 272:	08 95       	ret

Disassembly of section .text.main:

000002e0 <main>:

char str1[10];
int flag=1;
int main(void)
{
	init();
 2e0:	0e 94 25 01 	call	0x24a	; 0x24a <init>
    speaker_begin();
 2e4:	0e 94 4e 01 	call	0x29c	; 0x29c <speaker_begin>
 2e8:	2f ef       	ldi	r18, 0xFF	; 255
 2ea:	83 ed       	ldi	r24, 0xD3	; 211
 2ec:	90 e3       	ldi	r25, 0x30	; 48
 2ee:	21 50       	subi	r18, 0x01	; 1
 2f0:	80 40       	sbci	r24, 0x00	; 0
 2f2:	90 40       	sbci	r25, 0x00	; 0
 2f4:	e1 f7       	brne	.-8      	; 0x2ee <main+0xe>
 2f6:	00 c0       	rjmp	.+0      	; 0x2f8 <main+0x18>
 2f8:	00 00       	nop
 2fa:	ff cf       	rjmp	.-2      	; 0x2fa <main+0x1a>

Disassembly of section .text.uint16ToArray:

00000344 <uint16ToArray>:

uint8_t _packet[10] = {0x7E, 0xFF, 0x06, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEF};

void uint16ToArray(uint16_t value, uint8_t *array)
{
  *array = (uint8_t)(value>>8);
 344:	fb 01       	movw	r30, r22
 346:	90 83       	st	Z, r25
  *(array+1) = (uint8_t)(value);
 348:	81 83       	std	Z+1, r24	; 0x01
 34a:	08 95       	ret

Disassembly of section .text.calculateCheckSum:

0000021e <calculateCheckSum>:
    _delay_ms(200);
}

void speaker_play(uint8_t file)
{
    sendPacket((uint8_t)0x03, file);
 21e:	bc 01       	movw	r22, r24
 220:	21 e0       	ldi	r18, 0x01	; 1
 222:	30 e0       	ldi	r19, 0x00	; 0
 224:	40 e0       	ldi	r20, 0x00	; 0
 226:	50 e0       	ldi	r21, 0x00	; 0
 228:	08 c0       	rjmp	.+16     	; 0x23a <calculateCheckSum+0x1c>
 22a:	fb 01       	movw	r30, r22
 22c:	e2 0f       	add	r30, r18
 22e:	f3 1f       	adc	r31, r19
 230:	90 81       	ld	r25, Z
 232:	49 0f       	add	r20, r25
 234:	51 1d       	adc	r21, r1
 236:	2f 5f       	subi	r18, 0xFF	; 255
 238:	3f 4f       	sbci	r19, 0xFF	; 255
 23a:	27 30       	cpi	r18, 0x07	; 7
 23c:	31 05       	cpc	r19, r1
 23e:	ac f3       	brlt	.-22     	; 0x22a <calculateCheckSum+0xc>
 240:	88 27       	eor	r24, r24
 242:	99 27       	eor	r25, r25
 244:	84 1b       	sub	r24, r20
 246:	95 0b       	sbc	r25, r21
 248:	08 95       	ret

Disassembly of section .text.sendPacket:

00000184 <sendPacket>:
 184:	cf 93       	push	r28
 186:	df 93       	push	r29
 188:	9b 01       	movw	r18, r22
 18a:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <_end+0x3>
 18e:	60 e1       	ldi	r22, 0x10	; 16
 190:	71 e0       	ldi	r23, 0x01	; 1
 192:	c9 01       	movw	r24, r18
 194:	0e 94 a2 01 	call	0x344	; 0x344 <uint16ToArray>
 198:	8b e0       	ldi	r24, 0x0B	; 11
 19a:	91 e0       	ldi	r25, 0x01	; 1
 19c:	0e 94 0f 01 	call	0x21e	; 0x21e <calculateCheckSum>
 1a0:	62 e1       	ldi	r22, 0x12	; 18
 1a2:	71 e0       	ldi	r23, 0x01	; 1
 1a4:	0e 94 a2 01 	call	0x344	; 0x344 <uint16ToArray>
 1a8:	c0 e0       	ldi	r28, 0x00	; 0
 1aa:	d0 e0       	ldi	r29, 0x00	; 0
 1ac:	07 c0       	rjmp	.+14     	; 0x1bc <sendPacket+0x38>
 1ae:	fe 01       	movw	r30, r28
 1b0:	e5 5f       	subi	r30, 0xF5	; 245
 1b2:	fe 4f       	sbci	r31, 0xFE	; 254
 1b4:	80 81       	ld	r24, Z
 1b6:	0e 94 89 01 	call	0x312	; 0x312 <UART_send>
 1ba:	21 96       	adiw	r28, 0x01	; 1
 1bc:	ca 30       	cpi	r28, 0x0A	; 10
 1be:	d1 05       	cpc	r29, r1
 1c0:	b4 f3       	brlt	.-20     	; 0x1ae <sendPacket+0x2a>
 1c2:	8f e3       	ldi	r24, 0x3F	; 63
 1c4:	9c e9       	ldi	r25, 0x9C	; 156
 1c6:	01 97       	sbiw	r24, 0x01	; 1
 1c8:	f1 f7       	brne	.-4      	; 0x1c6 <sendPacket+0x42>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <sendPacket+0x48>
 1cc:	00 00       	nop
 1ce:	df 91       	pop	r29
 1d0:	cf 91       	pop	r28
 1d2:	08 95       	ret

Disassembly of section .text.speaker_reset:

00000320 <speaker_reset>:
    _delay_ms(10);
}

void speaker_reset()
{
    sendPacket((uint8_t)0x0C, (uint8_t)0);
 320:	60 e0       	ldi	r22, 0x00	; 0
 322:	70 e0       	ldi	r23, 0x00	; 0
 324:	8c e0       	ldi	r24, 0x0C	; 12
 326:	0e 94 c2 00 	call	0x184	; 0x184 <sendPacket>
 32a:	08 95       	ret

Disassembly of section .text.speaker_setVolume:

0000032c <speaker_setVolume>:
}

void speaker_setVolume(uint8_t vol)
{
    sendPacket((uint8_t)0x06, (uint8_t)vol);
 32c:	68 2f       	mov	r22, r24
 32e:	70 e0       	ldi	r23, 0x00	; 0
 330:	86 e0       	ldi	r24, 0x06	; 6
 332:	0e 94 c2 00 	call	0x184	; 0x184 <sendPacket>
 336:	08 95       	ret

Disassembly of section .text.speaker_setEQ:

00000338 <speaker_setEQ>:
}

void speaker_setEQ()
{
    sendPacket((uint8_t)0x07, (uint8_t)0);
 338:	60 e0       	ldi	r22, 0x00	; 0
 33a:	70 e0       	ldi	r23, 0x00	; 0
 33c:	87 e0       	ldi	r24, 0x07	; 7
 33e:	0e 94 c2 00 	call	0x184	; 0x184 <sendPacket>
 342:	08 95       	ret

Disassembly of section .text.speaker_outputDevice:

000002c2 <speaker_outputDevice>:
}

void speaker_outputDevice()
{
    sendPacket((uint8_t)0x09, (uint8_t)DFPLAYER_DEVICE_SD);
 2c2:	62 e0       	ldi	r22, 0x02	; 2
 2c4:	70 e0       	ldi	r23, 0x00	; 0
 2c6:	89 e0       	ldi	r24, 0x09	; 9
 2c8:	0e 94 c2 00 	call	0x184	; 0x184 <sendPacket>
 2cc:	2f ef       	ldi	r18, 0xFF	; 255
 2ce:	83 ec       	ldi	r24, 0xC3	; 195
 2d0:	99 e0       	ldi	r25, 0x09	; 9
 2d2:	21 50       	subi	r18, 0x01	; 1
 2d4:	80 40       	sbci	r24, 0x00	; 0
 2d6:	90 40       	sbci	r25, 0x00	; 0
 2d8:	e1 f7       	brne	.-8      	; 0x2d2 <speaker_outputDevice+0x10>
 2da:	00 c0       	rjmp	.+0      	; 0x2dc <speaker_outputDevice+0x1a>
 2dc:	00 00       	nop
 2de:	08 95       	ret

Disassembly of section .text.speaker_begin:

0000029c <speaker_begin>:
    sendPacket((uint8_t)0x03, file);
}

void speaker_begin()
{
    speaker_reset();
 29c:	0e 94 90 01 	call	0x320	; 0x320 <speaker_reset>
 2a0:	2f ef       	ldi	r18, 0xFF	; 255
 2a2:	87 ea       	ldi	r24, 0xA7	; 167
 2a4:	91 e6       	ldi	r25, 0x61	; 97
 2a6:	21 50       	subi	r18, 0x01	; 1
 2a8:	80 40       	sbci	r24, 0x00	; 0
 2aa:	90 40       	sbci	r25, 0x00	; 0
 2ac:	e1 f7       	brne	.-8      	; 0x2a6 <speaker_begin+0xa>
 2ae:	00 c0       	rjmp	.+0      	; 0x2b0 <speaker_begin+0x14>
 2b0:	00 00       	nop
    _delay_ms(2000);

    speaker_setVolume(25);
 2b2:	89 e1       	ldi	r24, 0x19	; 25
 2b4:	0e 94 96 01 	call	0x32c	; 0x32c <speaker_setVolume>
    speaker_setEQ();
 2b8:	0e 94 9c 01 	call	0x338	; 0x338 <speaker_setEQ>
    speaker_outputDevice();
 2bc:	0e 94 61 01 	call	0x2c2	; 0x2c2 <speaker_outputDevice>
 2c0:	08 95       	ret

Disassembly of section .text.UART_init:

00000274 <UART_init>:

void UART_init()
{
	
	/*Set baud rate */
	UBRR0H = (unsigned char)(BAUD_PRESCALER>>8);
 274:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char)BAUD_PRESCALER;
 278:	87 e6       	ldi	r24, 0x67	; 103
 27a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	//Enable receiver and transmitter
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 27e:	e1 ec       	ldi	r30, 0xC1	; 193
 280:	f0 e0       	ldi	r31, 0x00	; 0
 282:	88 e1       	ldi	r24, 0x18	; 24
 284:	80 83       	st	Z, r24
	/* Set frame format: 2 stop bits, 8 data bits */
	UCSR0C = (1<<UCSZ01) | (1<<UCSZ00); // 8 data bits
 286:	a2 ec       	ldi	r26, 0xC2	; 194
 288:	b0 e0       	ldi	r27, 0x00	; 0
 28a:	86 e0       	ldi	r24, 0x06	; 6
 28c:	8c 93       	st	X, r24
	UCSR0C |= (1<<USBS0); // 2 stop bits
 28e:	8c 91       	ld	r24, X
 290:	88 60       	ori	r24, 0x08	; 8
 292:	8c 93       	st	X, r24
	
	UCSR0B |= (1<<RXCIE0);
 294:	80 81       	ld	r24, Z
 296:	80 68       	ori	r24, 0x80	; 128
 298:	80 83       	st	Z, r24
 29a:	08 95       	ret

Disassembly of section .text.UART_send:

00000312 <UART_send>:
}

void UART_send(unsigned char data)
{
	// Wait for empty transmit buffer
	while(!(UCSR0A & (1<<UDRE0)));
 312:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 316:	95 ff       	sbrs	r25, 5
 318:	fc cf       	rjmp	.-8      	; 0x312 <UART_send>
	// Put data into buffer and send data
	UDR0 = data;
 31a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 31e:	08 95       	ret

Disassembly of section .text.__dummy_fini:

00000354 <_fini>:
 354:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000356 <__funcs_on_exit>:
 356:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000358 <__simulator_exit>:
 358:	08 95       	ret

Disassembly of section .text.exit:

000002fc <exit>:
 2fc:	ec 01       	movw	r28, r24
 2fe:	0e 94 ab 01 	call	0x356	; 0x356 <__funcs_on_exit>
 302:	0e 94 aa 01 	call	0x354	; 0x354 <_fini>
 306:	ce 01       	movw	r24, r28
 308:	0e 94 ac 01 	call	0x358	; 0x358 <__simulator_exit>
 30c:	ce 01       	movw	r24, r28
 30e:	0e 94 a8 01 	call	0x350	; 0x350 <_Exit>

Disassembly of section .text._Exit:

00000350 <_Exit>:
 350:	0e 94 62 00 	call	0xc4	; 0xc4 <_exit>
